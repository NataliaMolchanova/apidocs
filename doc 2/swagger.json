{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "Multiplayer Version service"
  },
  "servers": [
    {
      "url": "/v0/version"
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "Health"
    },
    {
      "name": "Healthz",
      "description": "Healthz"
    },
    {
      "name": "Project-Branch",
      "description": "Project-Branch"
    },
    {
      "name": "Commit",
      "description": "Commit"
    },
    {
      "name": "Entity-Commit",
      "description": "Entity-Commit"
    },
    {
      "name": "Entity",
      "description": "Entity"
    },
    {
      "name": "Project-Branch-Review",
      "description": "Project-Branch-Review"
    },
    {
      "name": "Project-Tag",
      "description": "Project-Tag"
    },
    {
      "name": "Project-Link",
      "description": "Project-Link"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Get health.",
        "description": "Get health.",
        "tags": [
          "Health"
        ],
        "operationId": "geHealth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Health.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Get healthz.",
        "description": "Get healthz.",
        "tags": [
          "Healthz"
        ],
        "operationId": "geHealthz",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Healthz.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Healthz"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches": {
      "get": {
        "operationId": "listBranches",
        "summary": "List Branches.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "Project branch name",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer",
            "min": 0,
            "description": "documents to skip. Default 0",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "min": 1,
            "type": "integer",
            "description": "limit. Default 30.",
            "required": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "default",
            "in": "query",
            "description": "Show or hide default branch",
            "type": "boolean",
            "required": false
          },
          {
            "name": "status[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranchStatusEnum"
                }
              }
            }
          },
          {
            "name": "sortKey",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "description": "Sort key.",
            "required": false
          },
          {
            "name": "sortDirection",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "enum": [
              1,
              -1
            ],
            "description": "Sort direction.",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of Branches.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranchesWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createProjectBranch",
        "summary": "Create Branch.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBranchCreatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created Branch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranch"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/merge": {
      "post": {
        "operationId": "mergeBranches",
        "summary": "Merge Branches (internal).",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchFrom",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id",
            "required": true
          },
          {
            "name": "projectBranchTo",
            "in": "query",
            "type": "integer",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBranchMergePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Commit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Commit"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/default": {
      "get": {
        "operationId": "getDefaultProjectBranch",
        "summary": "Get default project branch.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Branch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranch"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}": {
      "get": {
        "operationId": "getBranch",
        "summary": "Get Branch.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Branch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranch"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateBranch",
        "summary": "Update Branch.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBranchUpdatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Updated Branch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranch"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteBranch",
        "summary": "Delete Branch.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Project-Branch deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/state": {
      "get": {
        "operationId": "getBranchState",
        "summary": "Get branch state.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer",
            "min": 0,
            "description": "documents to skip. Default 0",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "min": 1,
            "type": "integer",
            "description": "limit. Default 30.",
            "required": false
          },
          {
            "name": "commit",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Commit id - hex.",
            "required": false
          },
          {
            "name": "entityType",
            "in": "query",
            "type": "string",
            "description": "Entity type.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EntityTypeEnum"
            }
          },
          {
            "name": "changeType",
            "in": "query",
            "type": "string",
            "description": "Entity commit type.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EntityCommitChangeTypeEnum"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "sortKey",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "description": "Sort key.",
            "required": false
          },
          {
            "name": "sortDirection",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "enum": [
              1,
              -1
            ],
            "description": "Sort direction.",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Branch state.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranchStateWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/changes": {
      "get": {
        "operationId": "getChangesInBranch",
        "summary": "Get changes is branch.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex",
            "required": true
          },
          {
            "name": "after",
            "in": "query",
            "type": "string",
            "description": "Date",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer",
            "min": 0,
            "description": "documents to skip. Default 0",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "min": 1,
            "type": "integer",
            "description": "limit. Default 30.",
            "required": false
          },
          {
            "name": "entityType",
            "in": "query",
            "type": "string",
            "description": "Entity type.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EntityTypeEnum"
            }
          },
          {
            "name": "changeType",
            "in": "query",
            "type": "string",
            "description": "Enntity-Commit type.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EntityCommitChangeTypeEnum"
            }
          },
          {
            "name": "sortKey",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "description": "Sort key.",
            "required": false
          },
          {
            "name": "sortDirection",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "enum": [
              1,
              -1
            ],
            "description": "Sort direction.",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Entity-Commits",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranchChangesWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/changes/stats": {
      "get": {
        "operationId": "getChangesStatsInBranch",
        "summary": "Get changes stats is branch.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Branch changes stats",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranchChangesStats"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/conflicts": {
      "get": {
        "operationId": "getConflictsBetweenBranches",
        "summary": "Get conflicts between branches.",
        "tags": [
          "Project-Branch"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchFrom",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "projectBranchTo",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "sortKey",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "description": "Sort key.",
            "required": false
          },
          {
            "name": "sortDirection",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "enum": [
              1,
              -1
            ],
            "description": "Sort direction.",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Branch conflicts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchesConflicts"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/commits": {
      "get": {
        "operationId": "listCommits",
        "summary": "List Commits.",
        "tags": [
          "Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer",
            "min": 0,
            "description": "documents to skip. Default 0",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "min": 1,
            "type": "integer",
            "description": "limit. Default 30.",
            "required": false
          },
          {
            "name": "after",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "Date",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of Commits.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitsWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createCommit",
        "summary": "Create Commit (internal).",
        "tags": [
          "Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommitCreatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created Commit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Commit"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/commits/{commitId}": {
      "get": {
        "operationId": "getCommit",
        "summary": "Get Commit.",
        "tags": [
          "Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "commitId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Commit id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Commit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Commit"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateCommit",
        "summary": "Update Commit.",
        "tags": [
          "Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "commitId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Commit id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommitUpdatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Updated Commit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Commit"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCommit",
        "summary": "Delete Commit.",
        "tags": [
          "Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "commitId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Commit id - hex.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Commit deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/entities": {
      "get": {
        "operationId": "listEntities",
        "summary": "List Entities.",
        "tags": [
          "Entity"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer",
            "min": 0,
            "description": "documents to skip. Default 0",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "min": 1,
            "type": "integer",
            "description": "limit. Default 30.",
            "required": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": "boolean",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of Douments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createEntity",
        "summary": "Create Entity.",
        "tags": [
          "Entity"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityCreatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entity"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/entities/{entityId}": {
      "get": {
        "operationId": "getEntity",
        "summary": "Get Entity.",
        "tags": [
          "Entity"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranch",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entity"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateEntity",
        "summary": "Update Entity.",
        "tags": [
          "Entity"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityUpdatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Updated Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entity"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/entities/{entityId}/commits": {
      "get": {
        "operationId": "listEntityCommits",
        "summary": "List Entity-Commits.",
        "tags": [
          "Entity-Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": true
          },
          {
            "name": "commit",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Commit id - hex.",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer",
            "min": 0,
            "description": "documents to skip. Default 0",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "min": 1,
            "type": "integer",
            "description": "limit. Default 30.",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Entity-Commits.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityCommitsWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createEntityCommit",
        "summary": "Create Entity-Commit.",
        "tags": [
          "Entity-Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityCommitCreatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created Entity-Commit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityCommit"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/entities/{entityId}/commits/{entityCommitId}": {
      "get": {
        "operationId": "getEntityCommit",
        "summary": "Get Entity-Commit.",
        "tags": [
          "Entity-Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranch",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": true
          },
          {
            "name": "entityCommitId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity-Commit id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Entity-Commit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityCommit"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateEntityCommit",
        "summary": "Update enity commit.",
        "tags": [
          "Entity-Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": true
          },
          {
            "name": "entityCommitId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity Commit id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityCommitUpdatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Entity commit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityCommit"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/entities/{entityId}/commits/{entityCommitId}/meta": {
      "post": {
        "operationId": "updateEntityCommitMeta",
        "summary": "Update enity commit meta.",
        "tags": [
          "Entity-Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": true
          },
          {
            "name": "entityCommitId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity Commit id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityCommitMetaPayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Entity commit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityCommit"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/entities/{entityId}/commits/{entityCommitId}/contents": {
      "get": {
        "operationId": "getEntityCommitContents",
        "summary": "Get Entity-Commit contents",
        "tags": [
          "Entity-Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranch",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": true
          },
          {
            "name": "entityCommitId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity-Commit id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Entity-Commit contents",
            "content": {
              "application/octet-stream": {}
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/entities/{entityId}/commits/last": {
      "get": {
        "operationId": "getLastEntityCommitInBranch",
        "summary": "Get last Entity-Commit in branch.",
        "tags": [
          "Entity-Commit"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "entityId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Entity id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Entity-Commit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityCommit"
                }
              }
            }
          },
          "404": {
            "description": "Entity-Commit not found in branch."
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/reviews": {
      "get": {
        "operationId": "listBranchReviews",
        "summary": "List Branch Reviews.",
        "tags": [
          "Project-Branch-Review"
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of branch reviews.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranchReviews"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "addBranchReview",
        "summary": "Add Branch Review.",
        "tags": [
          "Project-Branch-Review"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBranchReviewPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project-Branch review.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranchReview"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateBranchReview",
        "summary": "Update Branch Review.",
        "tags": [
          "Project-Branch-Review"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchReviewPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project-Branch review.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranchReview"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/reviews/reviewer": {
      "post": {
        "operationId": "inviteBranchReviewers",
        "summary": "Invite Branch Reviewers.",
        "tags": [
          "Project-Branch-Review"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteBranchReviewersPayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Branch reviewer.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBranchReview"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "removeBranchReviewer",
        "summary": "Remove Branch Reviewer.",
        "tags": [
          "Project-Branch-Review"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveBranchReviewerPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Project-Branch reviewer removed."
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/project-tags": {
      "get": {
        "operationId": "listProjectTags",
        "summary": "List Project Tags.",
        "tags": [
          "Project-Tag"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "gitRefRepositoryId",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Git-Repository id.",
            "required": false
          },
          {
            "name": "gitRefType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IntegrationTypeEnum"
            },
            "description": "Git repo type",
            "required": false
          },
          {
            "name": "gitRefBranch",
            "in": "query",
            "type": "string",
            "description": "Git branch",
            "required": false
          },
          {
            "name": "gitRefPath",
            "in": "query",
            "type": "string",
            "description": "Git file path",
            "required": false
          },
          {
            "name": "objectType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProjectTagObjectTypeEnum"
            },
            "required": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer",
            "min": 0,
            "description": "documents to skip. Default 0",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "min": 1,
            "type": "integer",
            "description": "limit. Default 30.",
            "required": false
          },
          {
            "name": "sortKey",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "description": "Sort key.",
            "required": false
          },
          {
            "name": "sortDirection",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "enum": [
              1,
              -1
            ],
            "description": "Sort direction.",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Tag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTagsWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createProjectTag",
        "summary": "Create Project Tag.",
        "tags": [
          "Project-Tag"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTagCreatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created Project Tag.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTag"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/project-tags/changes": {
      "get": {
        "operationId": "listProjectTags changes",
        "summary": "Get Project Tags changes",
        "tags": [
          "Project-Tag"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Tag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTagsWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/project-tags/{projectTagId}": {
      "get": {
        "operationId": "getProjectTag",
        "summary": "Get Project Tag.",
        "tags": [
          "Project-Tag"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "projectTagId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Tag id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project Tag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTag"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateProjectTag",
        "summary": "Update Project Tag.",
        "tags": [
          "Project-Tag"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "projectTagId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Tag id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTagUpdatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Updated Project Tag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTag"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteProjectTag",
        "summary": "Delete Project Tag.",
        "tags": [
          "Project-Tag"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "projectTagId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Tag id - hex.",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Project Tag deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/project-links": {
      "get": {
        "operationId": "listProjectLinks",
        "summary": "List Project Links.",
        "tags": [
          "Project-Link"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "gitRefRepositoryId",
            "in": "query",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Git-Repository id - hex.",
            "required": false
          },
          {
            "name": "gitRefBranch",
            "in": "query",
            "type": "string",
            "description": "Git branch",
            "required": false
          },
          {
            "name": "gitRefPath",
            "in": "query",
            "type": "string",
            "description": "Git file path",
            "required": false
          },
          {
            "name": "gitRefType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IntegrationTypeEnum"
            },
            "description": "Git repo type",
            "required": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer",
            "min": 0,
            "description": "documents to skip. Default 0",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "min": 1,
            "type": "integer",
            "description": "limit. Default 30.",
            "required": false
          },
          {
            "name": "sortKey",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "description": "Sort key.",
            "required": false
          },
          {
            "name": "sortDirection",
            "in": "query",
            "maxLength": 100,
            "type": "string",
            "enum": [
              1,
              -1
            ],
            "description": "Sort direction.",
            "required": false
          },
          {
            "name": "targetObjectType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProjectLinkObjectTypeEnum"
            },
            "description": "Git repo type",
            "required": false
          },
          {
            "name": "sourceObjectType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProjectLinkObjectTypeEnum"
            },
            "description": "Git repo type",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Links",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectLinksWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createProjectLink",
        "summary": "Create Project Link.",
        "tags": [
          "Project-Link"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectLinkCreatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Created Project Link.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectLink"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/project-links/changes": {
      "get": {
        "operationId": "listProjectLinks changes",
        "summary": "Get Project Links changes",
        "tags": [
          "Project-Link"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project-Link",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectLinksWithCursor"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/projects/{projectId}/branches/{projectBranchId}/project-links/{projectLinkId}": {
      "get": {
        "operationId": "getProjectLink",
        "summary": "Get Project Link.",
        "tags": [
          "Project-Link"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "projectLinkId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Link id - hex.",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Project Link",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectLink"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateProjectLink",
        "summary": "Update Project Link.",
        "tags": [
          "Project-Link"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "projectLinkId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Link id - hex.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectLinkUpdatePayload"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Updated Project-Link.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectLink"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteProjectLink",
        "summary": "Delete Project Link.",
        "tags": [
          "Project-Link"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Workspace id - hex.",
            "required": true
          },
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project id - hex.",
            "required": true
          },
          {
            "name": "projectBranchId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Branch id - hex.",
            "required": true
          },
          {
            "name": "projectLinkId",
            "in": "path",
            "type": "string",
            "minLength": 24,
            "maxLength": 24,
            "description": "Project-Link id - hex.",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Project Link deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "CookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "Multiplayer_SID"
      }
    },
    "schemas": {
      "IntegrationTypeEnum": {
        "type": "string",
        "enum": [
          "GITLAB",
          "GITHUB",
          "BITBUCKET"
        ]
      },
      "ProjectBranchStatusEnum": {
        "type": "string",
        "enum": [
          "TO_REVIEW",
          "CHANGE_REQUESTED",
          "IN_PROGRESS",
          "MERGED",
          "CLOSED",
          "APPROVED",
          "DRAFT"
        ]
      },
      "ProjectBranchReviewStateEnum": {
        "type": "string",
        "enum": [
          "APPROVED",
          "REJECTED",
          "PENDING"
        ]
      },
      "ProjectBranchTypeEnum": {
        "type": "string",
        "enum": [
          "FEATURE",
          "CHANGE",
          "BUGFIX"
        ]
      },
      "CommitTypeEnum": {
        "type": "string",
        "enum": [
          "AUTO",
          "MANUAL",
          "MERGE"
        ]
      },
      "EntityCommitChangeTypeEnum": {
        "type": "string",
        "enum": [
          "CREATE",
          "UPDATE",
          "DELETE",
          "ARCHIVE",
          "UNARCHIVE"
        ]
      },
      "EntityCommitStorageTypeEnum": {
        "type": "string",
        "enum": [
          "S3"
        ]
      },
      "EntityCommitStatusEnum": {
        "type": "string",
        "enum": [
          "PENDING",
          "ERROR",
          "DONE"
        ]
      },
      "EntityTypeEnum": {
        "type": "string",
        "enum": [
          "platform",
          "service",
          "api",
          "schema",
          "sketch",
          "file",
          "blocknote"
        ]
      },
      "ProjectTagObjectTypeEnum": {
        "type": "string",
        "enum": [
          "Entity",
          "GitRepository",
          "GitFile"
        ]
      },
      "SystemTagEnum": {
        "type": "string",
        "enum": [
          "API",
          "SERVICE"
        ]
      },
      "ProjectLinkObjectTypeEnum": {
        "type": "string",
        "enum": [
          "Entity",
          "GitRepository",
          "GitFile"
        ]
      },
      "Cursor": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "skip": {
            "type": "integer",
            "min": 0
          },
          "limit": {
            "type": "integer",
            "min": 1
          }
        }
      },
      "Health": {
        "type": "object",
        "properties": {
          "messageQueue": {
            "type": "boolean",
            "readOnly": true
          },
          "mongodb": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "Healthz": {
        "type": "string"
      },
      "ProjectBranchesWithCursor": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProjectBranches"
          },
          "cursor": {
            "$ref": "#/components/schemas/Cursor"
          }
        }
      },
      "ProjectBranches": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProjectBranch"
        }
      },
      "ProjectBranch": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "workspace": {
            "type": "string",
            "format": "uuid"
          },
          "project": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "parentBranch": {
            "type": "string",
            "format": "uuid"
          },
          "parentCommit": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/ProjectBranchStatusEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ProjectBranchTypeEnum"
          },
          "archived": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "lastCommitMeta": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "workspaceUser": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                }
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ProjectBranchCreatePayload": {
        "type": "object",
        "required": [
          "name",
          "parentBranch",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProjectBranchStatusEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ProjectBranchTypeEnum"
          },
          "archived": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "parentBranch": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProjectBranchUpdatePayload": {
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/ProjectBranchStatusEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ProjectBranchTypeEnum"
          }
        }
      },
      "ProjectBranchReviews": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProjectBranchReview"
        }
      },
      "ProjectBranchReview": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "workspaceUser": {
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "$ref": "#/components/schemas/ProjectBranchReviewStateEnum"
          },
          "comment": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "AddBranchReviewPayload": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/ProjectBranchReviewStateEnum"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "UpdateBranchReviewPayload": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/ProjectBranchReviewStateEnum"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "InviteBranchReviewersPayload": {
        "type": "object",
        "properties": {
          "workspaceUsers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RemoveBranchReviewerPayload": {
        "type": "object",
        "properties": {
          "workspaceUser": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProjectBranchMergePayload": {
        "type": "object",
        "properties": {
          "entityCommits": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "workspaceUsers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "CommitsWithCursor": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Commits"
          },
          "cursor": {
            "$ref": "#/components/schemas/Cursor"
          }
        }
      },
      "Commits": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Commit"
        }
      },
      "Commit": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "workspace": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "project": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "message": {
            "type": "string"
          },
          "projectBranch": {
            "type": "string",
            "format": "uuid"
          },
          "parentCommit": {
            "type": "string",
            "format": "uuid"
          },
          "mergeFromBranch": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/CommitTypeEnum"
          },
          "workspaceUser": {
            "type": "string",
            "format": "uuid"
          },
          "label": {
            "type": "string"
          },
          "entityCommits": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "CommitCreatePayload": {
        "type": "object",
        "required": [
          "message",
          "type",
          "entityCommits"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CommitTypeEnum"
          },
          "entityCommits": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "workspaceUsers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "CommitUpdatePayload": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "EntityCommitsWithCursor": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityCommits"
          },
          "cursor": {
            "$ref": "#/components/schemas/Cursor"
          }
        }
      },
      "EntityCommits": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EntityCommit"
        }
      },
      "EntityCommitMetaPayload": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "links": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "delete": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "EntityCommit": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "workspace": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "project": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "projectBranch": {
            "type": "string",
            "format": "uuid"
          },
          "commit": {
            "type": "string",
            "format": "uuid"
          },
          "parentCommit": {
            "type": "string",
            "format": "uuid"
          },
          "changeType": {
            "$ref": "#/components/schemas/EntityCommitChangeTypeEnum"
          },
          "status": {
            "$ref": "#/components/schemas/EntityCommitStatusEnum"
          },
          "entity": {
            "type": "string",
            "format": "uuid"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeEnum"
          },
          "storageType": {
            "$ref": "#/components/schemas/EntityCommitStorageTypeEnum"
          },
          "bucket": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "url": {
            "description": "Presigned url for uploading",
            "type": "string"
          },
          "meta": {
            "description": "commit metadata",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "EntityCommitCreatePayload": {
        "type": "object",
        "required": [
          "changeType",
          "entity",
          "storageType"
        ],
        "properties": {
          "changeType": {
            "$ref": "#/components/schemas/EntityCommitChangeTypeEnum"
          },
          "storageType": {
            "$ref": "#/components/schemas/EntityCommitStorageTypeEnum"
          },
          "meta": {
            "entityName": {
              "type": "string"
            },
            "links": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "EntityCommitUpdatePayload": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/EntityCommitStatusEnum"
          },
          "meta": {
            "entityName": {
              "type": "string"
            },
            "links": {
              "type": "object",
              "properties": {
                "add": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "delete": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "EntityWithEntityCommit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "type": "object",
        "properties": {
          "entityCommit": {
            "$ref": "#/components/schemas/EntityCommit"
          }
        }
      },
      "EntitiesWithCursor": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Entities"
          },
          "cursor": {
            "$ref": "#/components/schemas/Cursor"
          }
        }
      },
      "Entities": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Entity"
        }
      },
      "Entity": {
        "type": "object",
        "required": [
          "projectBranch",
          "entityId",
          "type",
          "key"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "workspace": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "project": {
            "type": "string",
            "format": "uuid"
          },
          "entityId": {
            "type": "string",
            "format": "uuid"
          },
          "projectBranch": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EntityTypeEnum"
          },
          "key": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "EntityCreatePayload": {
        "type": "object",
        "properties": {
          "projectBranch": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EntityTypeEnum"
          },
          "key": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "EntityUpdatePayload": {
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "gitRef": {
            "$ref": "#/components/schemas/GitRef"
          }
        }
      },
      "ProjectBranchChanges": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Entity"
          },
          "entityCommit": {
            "$ref": "#/components/schemas/EntityCommit"
          }
        }
      },
      "ProjectBranchChangesWithCursor": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProjectBranchChanges"
          },
          "cursor": {
            "$ref": "#/components/schemas/Cursor"
          }
        }
      },
      "ProjectBranchChangesStats": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "changeType": {
              "$ref": "#/components/schemas/EntityCommitChangeTypeEnum"
            },
            "count": {
              "type": "integer"
            }
          }
        }
      },
      "EntityState": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Entity"
          },
          "entityCommit": {
            "$ref": "#/components/schemas/EntityCommit"
          }
        }
      },
      "ProjectBranchStateWithCursor": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityState"
          },
          "cursor": {
            "$ref": "#/components/schemas/Cursor"
          }
        }
      },
      "BranchesConflict": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Entity"
          },
          "entityCommitTo": {
            "$ref": "#/components/schemas/EntityCommit"
          },
          "entityCommitFrom": {
            "$ref": "#/components/schemas/EntityCommit"
          },
          "baseEntityCommit": {
            "$ref": "#/components/schemas/EntityCommit"
          }
        }
      },
      "BranchesConflicts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BranchesConflict"
        }
      },
      "GitRef": {
        "type": "object",
        "properties": {
          "repositoryType": {
            "$ref": "#/components/schemas/IntegrationTypeEnum"
          },
          "repositoryId": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "ProjectTagsWithCursor": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProjectTags"
          },
          "cursor": {
            "$ref": "#/components/schemas/Cursor"
          }
        }
      },
      "ProjectTags": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProjectTag"
        }
      },
      "ProjectTag": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "workspace": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "project": {
            "type": "string",
            "format": "uuid"
          },
          "projectTagId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "projectBranch": {
            "type": "string",
            "format": "uuid"
          },
          "objectType": {
            "$ref": "#/components/schemas/ProjectTagObjectTypeEnum"
          },
          "objectId": {
            "type": "string",
            "format": "uuid"
          },
          "gitRef": {
            "$ref": "#/components/schemas/GitRef"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "systemTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemTagEnum"
            }
          },
          "createdAtCommit": {
            "type": "string",
            "format": "uuid"
          },
          "archivedAtCommit": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ProjectTagCreatePayload": {
        "type": "object",
        "required": [
          "objectType"
        ],
        "properties": {
          "objectType": {
            "$ref": "#/components/schemas/ProjectTagObjectTypeEnum"
          },
          "objectId": {
            "type": "string",
            "format": "uuid"
          },
          "gitRef": {
            "$ref": "#/components/schemas/GitRef"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "systemTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemTagEnum"
            }
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "ProjectTagUpdatePayload": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "systemTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemTagEnum"
            }
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "ProjectLinksWithCursor": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProjectLinks"
          },
          "cursor": {
            "$ref": "#/components/schemas/Cursor"
          }
        }
      },
      "ProjectLinks": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProjectLink"
        }
      },
      "ProjectLink": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "workspace": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "project": {
            "type": "string",
            "format": "uuid"
          },
          "projectLinkId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "projectBranch": {
            "type": "string",
            "format": "uuid"
          },
          "sourceObjectType": {
            "$ref": "#/components/schemas/ProjectLinkObjectTypeEnum"
          },
          "sourceObject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GitRepository"
              },
              {
                "$ref": "#/components/schemas/Entity"
              }
            ]
          },
          "sourceGitRef": {
            "$ref": "#/components/schemas/GitRef"
          },
          "targetObject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GitRepository"
              },
              {
                "$ref": "#/components/schemas/Entity"
              }
            ]
          },
          "targetObjectType": {
            "$ref": "#/components/schemas/ProjectLinkObjectTypeEnum"
          },
          "createdAtCommit": {
            "type": "string",
            "format": "uuid"
          },
          "archivedAtCommit": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ProjectLinkCreatePayload": {
        "type": "object",
        "required": [
          "sourceObjectType",
          "targetObject",
          "targetObjectType"
        ],
        "properties": {
          "sourceObjectType": {
            "$ref": "#/components/schemas/ProjectLinkObjectTypeEnum"
          },
          "sourceObject": {
            "type": "string",
            "format": "uuid"
          },
          "sourceGitRef": {
            "$ref": "#/components/schemas/GitRef"
          },
          "targetObject": {
            "type": "string",
            "format": "uuid"
          },
          "targetObjectType": {
            "$ref": "#/components/schemas/ProjectLinkObjectTypeEnum"
          }
        }
      },
      "ProjectLinkUpdatePayload": {
        "type": "object",
        "required": [],
        "properties": {
          "sourceObjectType": {
            "$ref": "#/components/schemas/ProjectLinkObjectTypeEnum"
          },
          "sourceObject": {
            "type": "string",
            "format": "uuid"
          },
          "sourceGitRef": {
            "$ref": "#/components/schemas/GitRef"
          },
          "targetObject": {
            "type": "string",
            "format": "uuid"
          },
          "targetObjectType": {
            "$ref": "#/components/schemas/ProjectLinkObjectTypeEnum"
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "archived": {
            "type": "boolean"
          },
          "workspace": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "GitRepository": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "archived": {
            "type": "boolean"
          },
          "workspace": {
            "type": "string",
            "format": "uuid"
          },
          "project": {
            "type": "string",
            "format": "uuid"
          },
          "integration": {
            "type": "string",
            "format": "uuid"
          },
          "gitRepository": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/IntegrationTypeEnum"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "defaultBranch": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message",
          "status"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      }
    }
  }
}
