{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "Multiplayer Authentication service"
  },
  "servers": [
    {
      "url": "/v0/auth"
    }
  ],
  "tags": [
    {
      "name": "Google",
      "description": "Google"
    },
    {
      "name": "Github",
      "description": "Github"
    },
    {
      "name": "Gitlab",
      "description": "Gitlab"
    },
    {
      "name": "Local",
      "description": "Local"
    },
    {
      "name": "Logout",
      "description": "Logout"
    },
    {
      "name": "Health",
      "description": "Health"
    },
    {
      "name": "Healthz",
      "description": "Healthz"
    },
    {
      "name": "Auth-Type",
      "description": "Auth-Type"
    },
    {
      "name": "User-Sessions",
      "description": "User-Sessions"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Get health.",
        "description": "Get health.",
        "tags": [
          "Health"
        ],
        "operationId": "geHealth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Health.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Get healthz.",
        "description": "Get healthz.",
        "tags": [
          "Healthz"
        ],
        "operationId": "geHealthz",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Health.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Healthz"
                }
              }
            }
          }
        }
      }
    },
    "/google/auth": {
      "get": {
        "operationId": "googleAuth",
        "summary": "Login with google account.",
        "tags": [
          "Google"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "refUser",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false,
            "description": "Id of user who invited."
          },
          {
            "in": "query",
            "name": "redirectUrl",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Redirect url after auth."
          },
          {
            "in": "query",
            "name": "linkToUserId",
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "required": false,
            "description": "Link to user with id. Note: you should be logged in."
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to google"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/google/callback": {
      "get": {
        "operationId": "googleCallback",
        "summary": "Google oauth callback.",
        "tags": [
          "Google"
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated. The session ID is returned in a cookie named `Multiplayer_SID`. You need to include this cookie in subsequent requests.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "Multiplayer_SID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/github/auth": {
      "get": {
        "operationId": "githubAuth",
        "summary": "Login with github account.",
        "tags": [
          "Github"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "refUser",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false,
            "description": "Id of user who invited."
          },
          {
            "in": "query",
            "name": "redirectUrl",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Redirect url after auth."
          },
          {
            "in": "query",
            "name": "linkToUserId",
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "required": false,
            "description": "Link to user with id. Note: you should be logged in."
          }
        ],
        "responses": {
          "200": {
            "description": "Redirect to github"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/github/callback": {
      "get": {
        "operationId": "githubCallback",
        "summary": "Github oauth callback.",
        "tags": [
          "Github"
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated. The session ID is returned in a cookie named `Multiplayer_SID`. You need to include this cookie in subsequent requests.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "Multiplayer_SID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gitlab/auth": {
      "get": {
        "operationId": "gitlabAuth",
        "summary": "Login with gitlab account.",
        "tags": [
          "Gitlab"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "refUser",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false,
            "description": "Id of user who invited."
          },
          {
            "in": "query",
            "name": "redirectUrl",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Redirect url after auth."
          },
          {
            "in": "query",
            "name": "linkToUserId",
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24
            },
            "required": false,
            "description": "Link to user with id. Note: you should be logged in."
          }
        ],
        "responses": {
          "200": {
            "description": "Redirect to gitlab"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/gitlab/callback": {
      "get": {
        "operationId": "gitlabCallback",
        "summary": "Gitlab oauth callback.",
        "tags": [
          "Gitlab"
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated. The session ID is returned in a cookie named `Multiplayer_SID`. You need to include this cookie in subsequent requests.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "Multiplayer_SID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/local/login": {
      "post": {
        "operationId": "login",
        "summary": "Login with email & password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalLoginPayload"
              }
            }
          }
        },
        "tags": [
          "Local"
        ],
        "responses": {
          "204": {
            "description": "Successfully authenticated. The session ID is returned in a cookie named `Multiplayer_SID`. You need to include this cookie in subsequent requests.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "JSESSIONID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/local/register": {
      "post": {
        "operationId": "localRegister",
        "summary": "Register using your email",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Local"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalRegisterPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User created. Check your email."
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/local/forgot": {
      "post": {
        "operationId": "localForgotPassword",
        "summary": "Send reset password email.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Local"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalForgotPasswordPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Reset password email sent."
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/local/set-password": {
      "post": {
        "operationId": "setLocalPassword",
        "summary": "Set password for local profile.",
        "tags": [
          "Local"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalSetPasswordPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "New password set. You can login."
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/local/confirm-email": {
      "post": {
        "operationId": "confirmLocalEmail",
        "summary": "Confirm local email.",
        "tags": [
          "Local"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalConfirmEmailPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Local email confirmed."
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "operationId": "logoutCurrent",
        "summary": "Logout from current session.",
        "tags": [
          "Logout"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully destroyed session"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth-type": {
      "get": {
        "operationId": "getUserAuthType",
        "summary": "Get user auth type.",
        "tags": [
          "Auth-Type"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User email."
          }
        ],
        "responses": {
          "200": {
            "description": "User auth type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthType"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user-session": {
      "get": {
        "operationId": "getUserSession",
        "summary": "Get user session.",
        "tags": [
          "User-Sessions"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User session.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSessions"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateUserSession",
        "summary": "Update user session.",
        "tags": [
          "User-Sessions"
        ],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserSessionPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Current user session.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserSession"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "CookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "Multiplayer_SID"
      }
    },
    "schemas": {
      "AuthTypeEnum": {
        "type": "string",
        "enum": [
          "LOCAL"
        ]
      },
      "UserColorEnum": {
        "type": "string",
        "enum": [
          "#FF4F00",
          "#ECA96F",
          "#EC6FA9",
          "#6FECA9"
        ]
      },
      "UserPrimaryEmailSourceEnum": {
        "type": "string",
        "enum": [
          "GITLAB",
          "GITHUB",
          "GOOGLE",
          "LOCAL"
        ]
      },
      "WorkspaceMemberRoleEnum": {
        "type": "string",
        "enum": [
          "ADMIN",
          "USER"
        ]
      },
      "TeamMemberRoleEnum": {
        "type": "string",
        "enum": [
          "ADMIN",
          "USER"
        ]
      },
      "Health": {
        "type": "object",
        "properties": {
          "messageQueue": {
            "type": "boolean",
            "readOnly": true
          },
          "mongodb": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "Healthz": {
        "type": "string"
      },
      "WorkspaceInSession": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "handle": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "format": "uuid"
              },
              "role": {
                "$ref": "#/components/schemas/WorkspaceMemberRoleEnum"
              },
              "workspaceUser": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "role": {
                      "$ref": "#/components/schemas/TeamMemberRoleEnum"
                    },
                    "workspaceUser": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UserSession": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "primaryEmail": {
            "type": "string"
          },
          "primaryEmailSource": {
            "$ref": "#/components/schemas/UserPrimaryEmailSourceEnum"
          },
          "username": {
            "type": "string"
          },
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkspaceInSession"
            }
          }
        }
      },
      "LocalLoginPayload": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "required": true
          },
          "password": {
            "type": "string",
            "required": true
          }
        }
      },
      "LocalRegisterPayload": {
        "type": "object",
        "properties": {
          "refUser": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "required": true
          },
          "email": {
            "type": "string",
            "required": true
          },
          "password": {
            "type": "string",
            "required": true
          }
        }
      },
      "LocalForgotPasswordPayload": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "required": true
          }
        }
      },
      "LocalSetPasswordPayload": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "required": true
          },
          "password": {
            "type": "string",
            "required": true
          }
        }
      },
      "LocalConfirmEmailPayload": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "required": true
          }
        }
      },
      "UserAuthType": {
        "type": "object",
        "properties": {
          "authType": {
            "$ref": "#/components/schemas/AuthTypeEnum"
          }
        }
      },
      "UserSessions": {
        "type": "object",
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSession"
            }
          },
          "current": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CurrentUserSession": {
        "type": "object",
        "properties": {
          "current": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UpdateUserSessionPayload": {
        "type": "object",
        "properties": {
          "current": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message",
          "status"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      }
    }
  }
}
